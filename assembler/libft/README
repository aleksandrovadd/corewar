# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    README                                             :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: bsemchuk <marvin@42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2017/11/17 15:58:12 by bsemchuk          #+#    #+#              #
#    Updated: 2017/11/22 17:50:08 by bsemchuk         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

	Тут знаходиться опис всіх бібліотечних програм які я використовую останнім часом, функції типу strlen описуватися тут не будуть.

	ft_fd_valid(int fd)
	У випадку якщо fd не валідний файловий дескриптор (з якого неможливо читати) -- викликається perror() та exit();

	ft_error(char *line)
	Виводиться текст вказаний в line, без знака нового рядка, після чого програма завершується.

	ft_get_next_line_fd(int fd)
	З файлового дескриптора fd читаємо файл до знака нового рядка або ж до кінця файла і отримуємо назад поінтер на динамічно виділену
	память під зчитаний текст.

    ft_strmap(char const *s, char (*f)(char))
    Функція виділяє масив памяті аби втримати в собі строку s, потім над кожною літерою проводить функцію f, і результат записує
    у виділену память.
    Повертає поінтер на виділений масив.

    ft_strclr(char *s)
    Функція занулює память рядка s. По суті працює як bzero.

	ft_strdel(char **s)
	По суті працює як ft_free, ft_memdel звільняє память і значення змінної змінюється на нульовий поінтер.

    ft_strnequ(char const *s1, char const *s2)
    Перевірити чи співпадають s1 та s2 на n-нну кількість літер.

    ft_strsub(char const *s, unsigned int start, size_t len)
    Функція виділяє памяті для рядка len, і копіює туди все від s[start] до s[start + len]

    ft_strjoin(char const *s1, char const *s2)
    Функція виділяє память для len(s1) + len (s2) + NULL, після цього копіює s1 та s2 у виділену память
    char s1[] = "You"
    char s2[] = "Hey"
    ft_strjoin(s2, s1) = HeyYou;

    ft_strtrim(char const *s)
    Функція видаляє будь які пробіли з початку і/або кінця рядка. У випадку відсутності пробілів, копію рядка.

	ft_memchr(void const *p, char c)
	то же что и strchr, но по памяти поиск;

    ft_memcmp(void const *p, void const *p1, size_t n)
    Сравнение памяти размером с n, если не равно, то получаем разницу

    ft_strchindex(char const *line, char ch)
    Возвращает индекс ch, если нет такого знака, возвращает -1;
